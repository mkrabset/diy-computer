
Some throughts for the next model:

* Led connectors instead of on-pcb leds
* Current-limiting resistors (330ohm) on all ic outputs.
* Use of 74LS181 for ALU (in addition to ROR/ROL circuitry)
* Support pushing/popping status register to stack
* 64 ram
* 16 bit address bus + 8 bit data bus
* Ground planes
* 4k EEPROMS (12 address lines (4 step bits, 8 instruction bits))
* Ground-connectors on mounting holes on all pcbs
* 4 inputs, 4 outputs
* small 7seg displays for display outputs
* display hex for instruction/step
* halt instruction
* Easy change between programmer and internal clock
* Ground connector between programmer and rest of board
* Decoder on one floor
* More power connectors on each part
* Always m3 caps on all ic power



16 bit address transfers
------------------------
JMP-register:
 - Receives 8 bits high/low from 8bit-bus
 - Transmits 16 bits memory address to pc when jump-condition occurs (flags+cond match)

PC:
 - Receives 16 bits memory address from JMP-register when jump-condition occurs
 - Transmits 8 bits high/low to 8bit bus (store return adress on stack during jsr + maybe for relative addressing)
 - Return address (RTS) goes via JMP-register. (eg. load return address from stack to JMP-reg, then unconditional jump)

SP:
 - Transmits 16 bit address (stackpointer value) to MAR.
 - Supports inc/dec for pop/push (builtin 16 bit adder)

MAR:
 - Receives 16 bit address from SP or PC
 - Receives 8 bit high and low offset value from 8bit bus


